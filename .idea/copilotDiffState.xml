<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/AndroidManifest.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/AndroidManifest.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;&#10;&#10;    &lt;application&#10;        android:allowBackup=&quot;true&quot;&#10;        android:dataExtractionRules=&quot;@xml/data_extraction_rules&quot;&#10;        android:fullBackupContent=&quot;@xml/backup_rules&quot;&#10;        android:icon=&quot;@mipmap/ic_launcher&quot;&#10;        android:label=&quot;@string/app_name&quot;&#10;        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;&#10;        android:supportsRtl=&quot;true&quot;&#10;        android:theme=&quot;@style/Theme.TableTussle&quot;&gt;&#10;&#10;        &lt;!-- Login Activity - Launch Screen --&gt;&#10;        &lt;activity&#10;            android:name=&quot;.LoginActivity&quot;&#10;            android:exported=&quot;true&quot;&gt;&#10;            &lt;intent-filter&gt;&#10;                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;&#10;                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;&#10;            &lt;/intent-filter&gt;&#10;        &lt;/activity&gt;&#10;&#10;        &lt;!-- Register Activity --&gt;&#10;        &lt;activity&#10;            android:name=&quot;.RegisterActivity&quot;&#10;            android:exported=&quot;false&quot;&#10;            android:parentActivityName=&quot;.LoginActivity&quot;/&gt;&#10;&#10;        &lt;!-- Main Activity --&gt;&#10;        &lt;activity&#10;            android:name=&quot;.MainActivity&quot;&#10;            android:exported=&quot;false&quot;/&gt;&#10;&#10;        &lt;!-- Profile Activity --&gt;&#10;        &lt;activity&#10;            android:name=&quot;.ProfileActivity&quot;&#10;            android:exported=&quot;false&quot;&#10;            android:parentActivityName=&quot;.MainActivity&quot;/&gt;&#10;&#10;        &lt;!-- Statistics Activity --&gt;&#10;        &lt;activity&#10;            android:name=&quot;.StatisticsActivity&quot;&#10;            android:exported=&quot;false&quot;&#10;            android:parentActivityName=&quot;.MainActivity&quot;/&gt;&#10;&#10;        &lt;!-- How to Play Activity --&gt;&#10;        &lt;activity&#10;            android:name=&quot;.HowToPlayActivity&quot;&#10;            android:exported=&quot;false&quot;&#10;            android:parentActivityName=&quot;.MainActivity&quot;/&gt;&#10;&#10;    &lt;/application&gt;&#10;&#10;&lt;/manifest&gt;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;&#10;&#10;    &lt;application&#10;        android:allowBackup=&quot;true&quot;&#10;        android:dataExtractionRules=&quot;@xml/data_extraction_rules&quot;&#10;        android:fullBackupContent=&quot;@xml/backup_rules&quot;&#10;        android:icon=&quot;@mipmap/ic_launcher&quot;&#10;        android:label=&quot;@string/app_name&quot;&#10;        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;&#10;        android:supportsRtl=&quot;true&quot;&#10;        android:theme=&quot;@style/Theme.TableTussle&quot;&gt;&#10;&#10;        &lt;!-- Login Activity - Launch Screen --&gt;&#10;        &lt;activity&#10;            android:name=&quot;.LoginActivity&quot;&#10;            android:exported=&quot;true&quot;&gt;&#10;            &lt;intent-filter&gt;&#10;                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;&#10;                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;&#10;            &lt;/intent-filter&gt;&#10;        &lt;/activity&gt;&#10;&#10;        &lt;!-- Register Activity --&gt;&#10;        &lt;activity&#10;            android:name=&quot;.RegisterActivity&quot;&#10;            android:exported=&quot;false&quot;&#10;            android:parentActivityName=&quot;.LoginActivity&quot;/&gt;&#10;&#10;        &lt;!-- Main Activity --&gt;&#10;        &lt;activity&#10;            android:name=&quot;.MainActivity&quot;&#10;            android:exported=&quot;false&quot;/&gt;&#10;&#10;        &lt;!-- Profile Activity --&gt;&#10;        &lt;activity&#10;            android:name=&quot;.ProfileActivity&quot;&#10;            android:exported=&quot;false&quot;&#10;            android:parentActivityName=&quot;.MainActivity&quot;/&gt;&#10;&#10;        &lt;!-- Statistics Activity --&gt;&#10;        &lt;activity&#10;            android:name=&quot;.StatisticsActivity&quot;&#10;            android:exported=&quot;false&quot;&#10;            android:parentActivityName=&quot;.MainActivity&quot;/&gt;&#10;&#10;        &lt;!-- How to Play Activity --&gt;&#10;        &lt;activity&#10;            android:name=&quot;.HowToPlayActivity&quot;&#10;            android:exported=&quot;false&quot;&#10;            android:parentActivityName=&quot;.MainActivity&quot;/&gt;&#10;&#10;        &lt;!-- Edit Profile Activity --&gt;&#10;        &lt;activity&#10;            android:name=&quot;.EditProfileActivity&quot;&#10;            android:exported=&quot;false&quot;&#10;            android:parentActivityName=&quot;.ProfileActivity&quot;/&gt;&#10;&#10;        &lt;!-- Change Password Activity --&gt;&#10;        &lt;activity&#10;            android:name=&quot;.ChangePasswordActivity&quot;&#10;            android:exported=&quot;false&quot;&#10;            android:parentActivityName=&quot;.ProfileActivity&quot;/&gt;&#10;&#10;    &lt;/application&gt;&#10;&#10;&lt;/manifest&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/tabletussle/ChangePasswordActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/tabletussle/ChangePasswordActivity.java" />
              <option name="updatedContent" value="package com.example.tabletussle;&#10;&#10;import android.os.Bundle;&#10;import android.text.TextUtils;&#10;import android.widget.Toast;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;&#10;import com.example.tabletussle.database.AppDatabase;&#10;import com.example.tabletussle.database.User;&#10;import com.example.tabletussle.database.UserDao;&#10;import com.example.tabletussle.database.UserSession;&#10;import com.google.android.material.button.MaterialButton;&#10;import com.google.android.material.textfield.TextInputEditText;&#10;&#10;public class ChangePasswordActivity extends AppCompatActivity {&#10;&#10;    private TextInputEditText etCurrentPassword, etNewPassword, etConfirmPassword;&#10;    private MaterialButton btnChangePassword, btnCancel;&#10;    private UserSession userSession;&#10;    private AppDatabase database;&#10;    private UserDao userDao;&#10;    private User currentUser;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_change_password);&#10;&#10;        // Initialize database&#10;        database = AppDatabase.getInstance(this);&#10;        userDao = database.userDao();&#10;        userSession = new UserSession(this);&#10;&#10;        initializeViews();&#10;        loadCurrentUser();&#10;        setupClickListeners();&#10;    }&#10;&#10;    private void initializeViews() {&#10;        etCurrentPassword = findViewById(R.id.etCurrentPassword);&#10;        etNewPassword = findViewById(R.id.etNewPassword);&#10;        etConfirmPassword = findViewById(R.id.etConfirmPassword);&#10;        btnChangePassword = findViewById(R.id.btnChangePassword);&#10;        btnCancel = findViewById(R.id.btnCancel);&#10;        findViewById(R.id.btnBack).setOnClickListener(v -&gt; finish());&#10;    }&#10;&#10;    private void loadCurrentUser() {&#10;        int userId = userSession.getUserId();&#10;        if (userId != -1) {&#10;            currentUser = userDao.getUserById(userId);&#10;        }&#10;    }&#10;&#10;    private void setupClickListeners() {&#10;        btnChangePassword.setOnClickListener(v -&gt; changePassword());&#10;        btnCancel.setOnClickListener(v -&gt; finish());&#10;    }&#10;&#10;    private void changePassword() {&#10;        String currentPassword = etCurrentPassword.getText().toString().trim();&#10;        String newPassword = etNewPassword.getText().toString().trim();&#10;        String confirmPassword = etConfirmPassword.getText().toString().trim();&#10;&#10;        // Validation&#10;        if (TextUtils.isEmpty(currentPassword)) {&#10;            etCurrentPassword.setError(&quot;Current password is required&quot;);&#10;            etCurrentPassword.requestFocus();&#10;            return;&#10;        }&#10;&#10;        if (TextUtils.isEmpty(newPassword)) {&#10;            etNewPassword.setError(&quot;New password is required&quot;);&#10;            etNewPassword.requestFocus();&#10;            return;&#10;        }&#10;&#10;        if (newPassword.length() &lt; 6) {&#10;            etNewPassword.setError(&quot;Password must be at least 6 characters&quot;);&#10;            etNewPassword.requestFocus();&#10;            return;&#10;        }&#10;&#10;        if (TextUtils.isEmpty(confirmPassword)) {&#10;            etConfirmPassword.setError(&quot;Please confirm your password&quot;);&#10;            etConfirmPassword.requestFocus();&#10;            return;&#10;        }&#10;&#10;        if (!newPassword.equals(confirmPassword)) {&#10;            etConfirmPassword.setError(&quot;Passwords do not match&quot;);&#10;            etConfirmPassword.requestFocus();&#10;            return;&#10;        }&#10;&#10;        // Verify current password&#10;        if (currentUser == null || !currentUser.getPassword().equals(currentPassword)) {&#10;            etCurrentPassword.setError(&quot;Current password is incorrect&quot;);&#10;            etCurrentPassword.requestFocus();&#10;            Toast.makeText(this, &quot;Current password is incorrect&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        // Check if new password is same as old&#10;        if (currentPassword.equals(newPassword)) {&#10;            etNewPassword.setError(&quot;New password must be different from current password&quot;);&#10;            etNewPassword.requestFocus();&#10;            return;&#10;        }&#10;&#10;        // Update password&#10;        currentUser.setPassword(newPassword);&#10;        userDao.updateUser(currentUser);&#10;&#10;        Toast.makeText(this, &quot;Password changed successfully!&quot;, Toast.LENGTH_SHORT).show();&#10;        finish();&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/tabletussle/EditProfileActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/tabletussle/EditProfileActivity.java" />
              <option name="updatedContent" value="package com.example.tabletussle;&#10;&#10;import android.os.Bundle;&#10;import android.text.TextUtils;&#10;import android.widget.Toast;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;&#10;import com.example.tabletussle.database.AppDatabase;&#10;import com.example.tabletussle.database.User;&#10;import com.example.tabletussle.database.UserDao;&#10;import com.example.tabletussle.database.UserSession;&#10;import com.google.android.material.button.MaterialButton;&#10;import com.google.android.material.textfield.TextInputEditText;&#10;&#10;public class EditProfileActivity extends AppCompatActivity {&#10;&#10;    private TextInputEditText etUsername, etEmail;&#10;    private MaterialButton btnSaveChanges, btnCancel;&#10;    private UserSession userSession;&#10;    private AppDatabase database;&#10;    private UserDao userDao;&#10;    private User currentUser;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_edit_profile);&#10;&#10;        // Initialize database&#10;        database = AppDatabase.getInstance(this);&#10;        userDao = database.userDao();&#10;        userSession = new UserSession(this);&#10;&#10;        initializeViews();&#10;        loadCurrentUserData();&#10;        setupClickListeners();&#10;    }&#10;&#10;    private void initializeViews() {&#10;        etUsername = findViewById(R.id.etUsername);&#10;        etEmail = findViewById(R.id.etEmail);&#10;        btnSaveChanges = findViewById(R.id.btnSaveChanges);&#10;        btnCancel = findViewById(R.id.btnCancel);&#10;        findViewById(R.id.btnBack).setOnClickListener(v -&gt; finish());&#10;    }&#10;&#10;    private void loadCurrentUserData() {&#10;        int userId = userSession.getUserId();&#10;        if (userId != -1) {&#10;            currentUser = userDao.getUserById(userId);&#10;            if (currentUser != null) {&#10;                etUsername.setText(currentUser.getUsername());&#10;                etEmail.setText(currentUser.getEmail());&#10;            }&#10;        }&#10;    }&#10;&#10;    private void setupClickListeners() {&#10;        btnSaveChanges.setOnClickListener(v -&gt; saveChanges());&#10;        btnCancel.setOnClickListener(v -&gt; finish());&#10;    }&#10;&#10;    private void saveChanges() {&#10;        String newUsername = etUsername.getText().toString().trim();&#10;        String newEmail = etEmail.getText().toString().trim();&#10;&#10;        // Validation&#10;        if (TextUtils.isEmpty(newUsername)) {&#10;            etUsername.setError(&quot;Username is required&quot;);&#10;            etUsername.requestFocus();&#10;            return;&#10;        }&#10;&#10;        if (newUsername.length() &lt; 3) {&#10;            etUsername.setError(&quot;Username must be at least 3 characters&quot;);&#10;            etUsername.requestFocus();&#10;            return;&#10;        }&#10;&#10;        if (TextUtils.isEmpty(newEmail)) {&#10;            etEmail.setError(&quot;Email is required&quot;);&#10;            etEmail.requestFocus();&#10;            return;&#10;        }&#10;&#10;        if (!android.util.Patterns.EMAIL_ADDRESS.matcher(newEmail).matches()) {&#10;            etEmail.setError(&quot;Please enter a valid email&quot;);&#10;            etEmail.requestFocus();&#10;            return;&#10;        }&#10;&#10;        // Check if email is already taken by another user&#10;        if (!newEmail.equals(currentUser.getEmail())) {&#10;            User existingUser = userDao.getUserByEmail(newEmail);&#10;            if (existingUser != null &amp;&amp; existingUser.getId() != currentUser.getId()) {&#10;                etEmail.setError(&quot;Email already in use&quot;);&#10;                etEmail.requestFocus();&#10;                Toast.makeText(this, &quot;This email is already registered&quot;, Toast.LENGTH_SHORT).show();&#10;                return;&#10;            }&#10;        }&#10;&#10;        // Update user data&#10;        currentUser.setUsername(newUsername);&#10;        currentUser.setEmail(newEmail);&#10;        userDao.updateUser(currentUser);&#10;&#10;        Toast.makeText(this, &quot;Profile updated successfully!&quot;, Toast.LENGTH_SHORT).show();&#10;        finish();&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/tabletussle/ProfileActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/tabletussle/ProfileActivity.java" />
              <option name="originalContent" value="package com.example.tabletussle;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;&#10;import com.example.tabletussle.database.AppDatabase;&#10;import com.example.tabletussle.database.User;&#10;import com.example.tabletussle.database.UserDao;&#10;import com.example.tabletussle.database.UserSession;&#10;import com.google.android.material.button.MaterialButton;&#10;import com.google.android.material.card.MaterialCardView;&#10;&#10;public class ProfileActivity extends AppCompatActivity {&#10;&#10;    private TextView tvUserName, tvUserEmail, tvMemberSince;&#10;    private MaterialButton btnEditProfile, btnLogout;&#10;    private MaterialCardView cardChangePassword, cardNotifications, cardPrivacy, cardHelp;&#10;    private UserSession userSession;&#10;    private AppDatabase database;&#10;    private UserDao userDao;&#10;    private User currentUser;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_profile_new);&#10;&#10;        // Initialize database and session&#10;        database = AppDatabase.getInstance(this);&#10;        userDao = database.userDao();&#10;        userSession = new UserSession(this);&#10;&#10;        initializeViews();&#10;        loadUserData();&#10;        setupClickListeners();&#10;    }&#10;&#10;    private void initializeViews() {&#10;        tvUserName = findViewById(R.id.tvUserName);&#10;        tvUserEmail = findViewById(R.id.tvUserEmail);&#10;        tvMemberSince = findViewById(R.id.tvMemberSince);&#10;        btnEditProfile = findViewById(R.id.btnEditProfile);&#10;        btnLogout = findViewById(R.id.btnLogout);&#10;        cardChangePassword = findViewById(R.id.cardChangePassword);&#10;        cardNotifications = findViewById(R.id.cardNotifications);&#10;        cardPrivacy = findViewById(R.id.cardPrivacy);&#10;        cardHelp = findViewById(R.id.cardHelp);&#10;    }&#10;&#10;    private void loadUserData() {&#10;        int userId = userSession.getUserId();&#10;&#10;        if (userId != -1) {&#10;            currentUser = userDao.getUserById(userId);&#10;&#10;            if (currentUser != null) {&#10;                tvUserName.setText(currentUser.getUsername());&#10;                tvUserEmail.setText(currentUser.getEmail());&#10;                tvMemberSince.setText(&quot;Member since &quot; + currentUser.getMemberSince());&#10;            } else {&#10;                // Guest user&#10;                tvUserName.setText(&quot;Guest Player&quot;);&#10;                tvUserEmail.setText(&quot;guest@tabletussle.com&quot;);&#10;                tvMemberSince.setText(&quot;Member since October 2025&quot;);&#10;            }&#10;        } else {&#10;            // Guest user&#10;            tvUserName.setText(&quot;Guest Player&quot;);&#10;            tvUserEmail.setText(&quot;guest@tabletussle.com&quot;);&#10;            tvMemberSince.setText(&quot;Member since October 2025&quot;);&#10;        }&#10;    }&#10;&#10;    private void setupClickListeners() {&#10;        btnEditProfile.setOnClickListener(v -&gt; {&#10;            Toast.makeText(this, &quot;Edit Profile - Coming Soon!&quot;, Toast.LENGTH_SHORT).show();&#10;        });&#10;&#10;        btnLogout.setOnClickListener(v -&gt; handleLogout());&#10;&#10;        cardChangePassword.setOnClickListener(v -&gt; {&#10;            Toast.makeText(this, &quot;Change Password - Coming Soon!&quot;, Toast.LENGTH_SHORT).show();&#10;        });&#10;&#10;        cardNotifications.setOnClickListener(v -&gt; {&#10;            Toast.makeText(this, &quot;Notification Settings - Coming Soon!&quot;, Toast.LENGTH_SHORT).show();&#10;        });&#10;&#10;        cardPrivacy.setOnClickListener(v -&gt; {&#10;            Toast.makeText(this, &quot;Privacy Settings - Coming Soon!&quot;, Toast.LENGTH_SHORT).show();&#10;        });&#10;&#10;        cardHelp.setOnClickListener(v -&gt; {&#10;            Toast.makeText(this, &quot;Help &amp; Support - Coming Soon!&quot;, Toast.LENGTH_SHORT).show();&#10;        });&#10;&#10;        findViewById(R.id.btnBack).setOnClickListener(v -&gt; finish());&#10;    }&#10;&#10;    private void handleLogout() {&#10;        userSession.logout();&#10;&#10;        Toast.makeText(this, &quot;Logged out successfully&quot;, Toast.LENGTH_SHORT).show();&#10;&#10;        Intent intent = new Intent(ProfileActivity.this, LoginActivity.class);&#10;        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);&#10;        startActivity(intent);&#10;        finish();&#10;    }&#10;}&#10;&#10;" />
              <option name="updatedContent" value="package com.example.tabletussle;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;&#10;import com.example.tabletussle.database.AppDatabase;&#10;import com.example.tabletussle.database.User;&#10;import com.example.tabletussle.database.UserDao;&#10;import com.example.tabletussle.database.UserSession;&#10;import com.google.android.material.button.MaterialButton;&#10;import com.google.android.material.card.MaterialCardView;&#10;&#10;public class ProfileActivity extends AppCompatActivity {&#10;&#10;    private TextView tvUserName, tvUserEmail, tvMemberSince;&#10;    private MaterialButton btnEditProfile, btnLogout;&#10;    private MaterialCardView cardChangePassword, cardNotifications, cardPrivacy, cardHelp;&#10;    private UserSession userSession;&#10;    private AppDatabase database;&#10;    private UserDao userDao;&#10;    private User currentUser;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_profile_new);&#10;&#10;        // Initialize database and session&#10;        database = AppDatabase.getInstance(this);&#10;        userDao = database.userDao();&#10;        userSession = new UserSession(this);&#10;&#10;        initializeViews();&#10;        loadUserData();&#10;        setupClickListeners();&#10;    }&#10;&#10;    @Override&#10;    protected void onResume() {&#10;        super.onResume();&#10;        // Reload user data when returning from edit/change password screens&#10;        loadUserData();&#10;    }&#10;&#10;    private void initializeViews() {&#10;        tvUserName = findViewById(R.id.tvUserName);&#10;        tvUserEmail = findViewById(R.id.tvUserEmail);&#10;        tvMemberSince = findViewById(R.id.tvMemberSince);&#10;        btnEditProfile = findViewById(R.id.btnEditProfile);&#10;        btnLogout = findViewById(R.id.btnLogout);&#10;        cardChangePassword = findViewById(R.id.cardChangePassword);&#10;        cardNotifications = findViewById(R.id.cardNotifications);&#10;        cardPrivacy = findViewById(R.id.cardPrivacy);&#10;        cardHelp = findViewById(R.id.cardHelp);&#10;    }&#10;&#10;    private void loadUserData() {&#10;        int userId = userSession.getUserId();&#10;&#10;        if (userId != -1) {&#10;            currentUser = userDao.getUserById(userId);&#10;&#10;            if (currentUser != null) {&#10;                tvUserName.setText(currentUser.getUsername());&#10;                tvUserEmail.setText(currentUser.getEmail());&#10;                tvMemberSince.setText(&quot;Member since &quot; + currentUser.getMemberSince());&#10;            } else {&#10;                // Guest user&#10;                tvUserName.setText(&quot;Guest Player&quot;);&#10;                tvUserEmail.setText(&quot;guest@tabletussle.com&quot;);&#10;                tvMemberSince.setText(&quot;Member since October 2025&quot;);&#10;            }&#10;        } else {&#10;            // Guest user&#10;            tvUserName.setText(&quot;Guest Player&quot;);&#10;            tvUserEmail.setText(&quot;guest@tabletussle.com&quot;);&#10;            tvMemberSince.setText(&quot;Member since October 2025&quot;);&#10;        }&#10;    }&#10;&#10;    private void setupClickListeners() {&#10;        btnEditProfile.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(ProfileActivity.this, EditProfileActivity.class);&#10;            startActivity(intent);&#10;        });&#10;&#10;        btnLogout.setOnClickListener(v -&gt; handleLogout());&#10;&#10;        cardChangePassword.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(ProfileActivity.this, ChangePasswordActivity.class);&#10;            startActivity(intent);&#10;        });&#10;&#10;        cardNotifications.setOnClickListener(v -&gt; {&#10;            Toast.makeText(this, &quot;Notification Settings - Coming Soon!&quot;, Toast.LENGTH_SHORT).show();&#10;        });&#10;&#10;        cardPrivacy.setOnClickListener(v -&gt; {&#10;            Toast.makeText(this, &quot;Privacy Settings - Coming Soon!&quot;, Toast.LENGTH_SHORT).show();&#10;        });&#10;&#10;        cardHelp.setOnClickListener(v -&gt; {&#10;            Toast.makeText(this, &quot;Help &amp; Support - Coming Soon!&quot;, Toast.LENGTH_SHORT).show();&#10;        });&#10;&#10;        findViewById(R.id.btnBack).setOnClickListener(v -&gt; finish());&#10;    }&#10;&#10;    private void handleLogout() {&#10;        userSession.logout();&#10;&#10;        Toast.makeText(this, &quot;Logged out successfully&quot;, Toast.LENGTH_SHORT).show();&#10;&#10;        Intent intent = new Intent(ProfileActivity.this, LoginActivity.class);&#10;        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);&#10;        startActivity(intent);&#10;        finish();&#10;    }&#10;}&#10;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_change_password.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_change_password.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@color/primary_dark&quot;&gt;&#10;&#10;    &lt;!-- Header --&gt;&#10;    &lt;com.google.android.material.card.MaterialCardView&#10;        android:id=&quot;@+id/headerCard&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        app:cardBackgroundColor=&quot;@color/card_background&quot;&#10;        app:cardElevation=&quot;4dp&quot;&#10;        app:cardCornerRadius=&quot;0dp&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:padding=&quot;16dp&quot;&#10;            android:gravity=&quot;center_vertical&quot;&gt;&#10;&#10;            &lt;ImageButton&#10;                android:id=&quot;@+id/btnBack&quot;&#10;                android:layout_width=&quot;48dp&quot;&#10;                android:layout_height=&quot;48dp&quot;&#10;                android:src=&quot;@android:drawable/ic_menu_revert&quot;&#10;                android:background=&quot;?attr/selectableItemBackgroundBorderless&quot;&#10;                android:contentDescription=&quot;Back&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:text=&quot;Change Password&quot;&#10;                android:textSize=&quot;24sp&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:textColor=&quot;@color/text_primary&quot;&#10;                android:layout_marginStart=&quot;8dp&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;    &lt;/com.google.android.material.card.MaterialCardView&gt;&#10;&#10;    &lt;ScrollView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/headerCard&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:padding=&quot;24dp&quot;&gt;&#10;&#10;            &lt;!-- Security Icon --&gt;&#10;            &lt;ImageView&#10;                android:layout_width=&quot;80dp&quot;&#10;                android:layout_height=&quot;80dp&quot;&#10;                android:src=&quot;@android:drawable/ic_lock_lock&quot;&#10;                android:layout_gravity=&quot;center_horizontal&quot;&#10;                android:layout_marginTop=&quot;24dp&quot;&#10;                android:layout_marginBottom=&quot;32dp&quot;&#10;                app:tint=&quot;@color/accent_gold&quot; /&gt;&#10;&#10;            &lt;!-- Current Password Input --&gt;&#10;            &lt;com.google.android.material.textfield.TextInputLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;&#10;                android:hint=&quot;Current Password&quot;&#10;                app:boxBackgroundColor=&quot;@color/card_background&quot;&#10;                app:boxStrokeColor=&quot;@color/accent_gold&quot;&#10;                app:hintTextColor=&quot;@color/text_secondary&quot;&#10;                app:passwordToggleEnabled=&quot;true&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox&quot;&gt;&#10;&#10;                &lt;com.google.android.material.textfield.TextInputEditText&#10;                    android:id=&quot;@+id/etCurrentPassword&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:inputType=&quot;textPassword&quot;&#10;                    android:textColor=&quot;@color/text_primary&quot;&#10;                    android:textSize=&quot;16sp&quot; /&gt;&#10;            &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;            &lt;!-- New Password Input --&gt;&#10;            &lt;com.google.android.material.textfield.TextInputLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;&#10;                android:hint=&quot;New Password&quot;&#10;                app:boxBackgroundColor=&quot;@color/card_background&quot;&#10;                app:boxStrokeColor=&quot;@color/accent_gold&quot;&#10;                app:hintTextColor=&quot;@color/text_secondary&quot;&#10;                app:passwordToggleEnabled=&quot;true&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox&quot;&gt;&#10;&#10;                &lt;com.google.android.material.textfield.TextInputEditText&#10;                    android:id=&quot;@+id/etNewPassword&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:inputType=&quot;textPassword&quot;&#10;                    android:textColor=&quot;@color/text_primary&quot;&#10;                    android:textSize=&quot;16sp&quot; /&gt;&#10;            &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;            &lt;!-- Confirm Password Input --&gt;&#10;            &lt;com.google.android.material.textfield.TextInputLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;32dp&quot;&#10;                android:hint=&quot;Confirm New Password&quot;&#10;                app:boxBackgroundColor=&quot;@color/card_background&quot;&#10;                app:boxStrokeColor=&quot;@color/accent_gold&quot;&#10;                app:hintTextColor=&quot;@color/text_secondary&quot;&#10;                app:passwordToggleEnabled=&quot;true&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox&quot;&gt;&#10;&#10;                &lt;com.google.android.material.textfield.TextInputEditText&#10;                    android:id=&quot;@+id/etConfirmPassword&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:inputType=&quot;textPassword&quot;&#10;                    android:textColor=&quot;@color/text_primary&quot;&#10;                    android:textSize=&quot;16sp&quot; /&gt;&#10;            &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;            &lt;!-- Password Requirements Info --&gt;&#10;            &lt;com.google.android.material.card.MaterialCardView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;24dp&quot;&#10;                app:cardBackgroundColor=&quot;@color/accent_light&quot;&#10;                app:cardCornerRadius=&quot;12dp&quot;&#10;                app:cardElevation=&quot;2dp&quot;&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:padding=&quot;16dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Password Requirements:&quot;&#10;                        android:textSize=&quot;14sp&quot;&#10;                        android:textStyle=&quot;bold&quot;&#10;                        android:textColor=&quot;@color/text_primary&quot;&#10;                        android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;• At least 6 characters\n• Different from current password&quot;&#10;                        android:textSize=&quot;13sp&quot;&#10;                        android:textColor=&quot;@color/text_secondary&quot; /&gt;&#10;                &lt;/LinearLayout&gt;&#10;            &lt;/com.google.android.material.card.MaterialCardView&gt;&#10;&#10;            &lt;!-- Change Password Button --&gt;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnChangePassword&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;56dp&quot;&#10;                android:text=&quot;Change Password&quot;&#10;                android:textSize=&quot;16sp&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                app:cornerRadius=&quot;12dp&quot;&#10;                app:backgroundTint=&quot;@color/button_primary&quot;&#10;                android:textColor=&quot;@color/white&quot;&#10;                android:layout_marginBottom=&quot;12dp&quot; /&gt;&#10;&#10;            &lt;!-- Cancel Button --&gt;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnCancel&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;56dp&quot;&#10;                android:text=&quot;Cancel&quot;&#10;                android:textSize=&quot;16sp&quot;&#10;                app:cornerRadius=&quot;12dp&quot;&#10;                app:backgroundTint=&quot;@color/card_background&quot;&#10;                app:strokeColor=&quot;@color/text_secondary&quot;&#10;                app:strokeWidth=&quot;1dp&quot;&#10;                android:textColor=&quot;@color/text_primary&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;    &lt;/ScrollView&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_edit_profile.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_edit_profile.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@color/primary_dark&quot;&gt;&#10;&#10;    &lt;!-- Header --&gt;&#10;    &lt;com.google.android.material.card.MaterialCardView&#10;        android:id=&quot;@+id/headerCard&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        app:cardBackgroundColor=&quot;@color/card_background&quot;&#10;        app:cardElevation=&quot;4dp&quot;&#10;        app:cardCornerRadius=&quot;0dp&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:padding=&quot;16dp&quot;&#10;            android:gravity=&quot;center_vertical&quot;&gt;&#10;&#10;            &lt;ImageButton&#10;                android:id=&quot;@+id/btnBack&quot;&#10;                android:layout_width=&quot;48dp&quot;&#10;                android:layout_height=&quot;48dp&quot;&#10;                android:src=&quot;@android:drawable/ic_menu_revert&quot;&#10;                android:background=&quot;?attr/selectableItemBackgroundBorderless&quot;&#10;                android:contentDescription=&quot;Back&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:text=&quot;Edit Profile&quot;&#10;                android:textSize=&quot;24sp&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:textColor=&quot;@color/text_primary&quot;&#10;                android:layout_marginStart=&quot;8dp&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;    &lt;/com.google.android.material.card.MaterialCardView&gt;&#10;&#10;    &lt;ScrollView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/headerCard&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:padding=&quot;24dp&quot;&gt;&#10;&#10;            &lt;!-- Profile Picture Section --&gt;&#10;            &lt;com.google.android.material.card.MaterialCardView&#10;                android:layout_width=&quot;120dp&quot;&#10;                android:layout_height=&quot;120dp&quot;&#10;                android:layout_gravity=&quot;center_horizontal&quot;&#10;                android:layout_marginTop=&quot;16dp&quot;&#10;                android:layout_marginBottom=&quot;32dp&quot;&#10;                app:cardCornerRadius=&quot;60dp&quot;&#10;                app:cardElevation=&quot;8dp&quot;&#10;                app:cardBackgroundColor=&quot;@color/accent_gold&quot;&gt;&#10;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;match_parent&quot;&#10;                    android:gravity=&quot;center&quot;&#10;                    android:text=&quot;P&quot;&#10;                    android:textSize=&quot;64sp&quot;&#10;                    android:textStyle=&quot;bold&quot;&#10;                    android:textColor=&quot;@color/white&quot; /&gt;&#10;            &lt;/com.google.android.material.card.MaterialCardView&gt;&#10;&#10;            &lt;!-- Username Input --&gt;&#10;            &lt;com.google.android.material.textfield.TextInputLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;16dp&quot;&#10;                android:hint=&quot;Username&quot;&#10;                app:boxBackgroundColor=&quot;@color/card_background&quot;&#10;                app:boxStrokeColor=&quot;@color/accent_gold&quot;&#10;                app:hintTextColor=&quot;@color/text_secondary&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox&quot;&gt;&#10;&#10;                &lt;com.google.android.material.textfield.TextInputEditText&#10;                    android:id=&quot;@+id/etUsername&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:inputType=&quot;textPersonName&quot;&#10;                    android:textColor=&quot;@color/text_primary&quot;&#10;                    android:textSize=&quot;16sp&quot; /&gt;&#10;            &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;            &lt;!-- Email Input --&gt;&#10;            &lt;com.google.android.material.textfield.TextInputLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginBottom=&quot;32dp&quot;&#10;                android:hint=&quot;Email&quot;&#10;                app:boxBackgroundColor=&quot;@color/card_background&quot;&#10;                app:boxStrokeColor=&quot;@color/accent_gold&quot;&#10;                app:hintTextColor=&quot;@color/text_secondary&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox&quot;&gt;&#10;&#10;                &lt;com.google.android.material.textfield.TextInputEditText&#10;                    android:id=&quot;@+id/etEmail&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:inputType=&quot;textEmailAddress&quot;&#10;                    android:textColor=&quot;@color/text_primary&quot;&#10;                    android:textSize=&quot;16sp&quot; /&gt;&#10;            &lt;/com.google.android.material.textfield.TextInputLayout&gt;&#10;&#10;            &lt;!-- Save Changes Button --&gt;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnSaveChanges&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;56dp&quot;&#10;                android:text=&quot;Save Changes&quot;&#10;                android:textSize=&quot;16sp&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                app:cornerRadius=&quot;12dp&quot;&#10;                app:backgroundTint=&quot;@color/button_primary&quot;&#10;                android:textColor=&quot;@color/white&quot;&#10;                android:layout_marginBottom=&quot;12dp&quot; /&gt;&#10;&#10;            &lt;!-- Cancel Button --&gt;&#10;            &lt;com.google.android.material.button.MaterialButton&#10;                android:id=&quot;@+id/btnCancel&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;56dp&quot;&#10;                android:text=&quot;Cancel&quot;&#10;                android:textSize=&quot;16sp&quot;&#10;                app:cornerRadius=&quot;12dp&quot;&#10;                app:backgroundTint=&quot;@color/card_background&quot;&#10;                app:strokeColor=&quot;@color/text_secondary&quot;&#10;                app:strokeWidth=&quot;1dp&quot;&#10;                android:textColor=&quot;@color/text_primary&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;    &lt;/ScrollView&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>